plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    selenideVersion = "6.19.1",
    ownerVersion = "1.0.12",
    jUnitVersion = "5.10.0",
    slf4jVersion ="2.0.7",
    fakerVersion = "1.0.2"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    runtimeOnly group: 'org.aspectj', name: 'aspectjrt', version: '1.9.19'
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$jUnitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task all_tests(type: Test) {
    useJUnitPlatform {
        includeTags("all-tests")
    }
}






task smoke_tests(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}

task regress_tests(type: Test) {
    useJUnitPlatform {
        includeTags("regress")
    }
}